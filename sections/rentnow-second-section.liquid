{{ 'section-second-rentnow.css' | asset_url | stylesheet_tag }}
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Kristi&family=Syncopate:wght@700&display=swap" rel="stylesheet">

{% comment %} <link href="https://db.onlinewebfonts.com/c/1a5c2d8bbd4e28d99a6efcbb9a5b378f?family=JejuMyeongjo" rel="stylesheet"> {% endcomment %}

<div class="rentnow-second-section">
  <h1>How long will you be travelling for?</h1>

  <div class="rentnow-header2-container1">
    <div class="rentnow-calendar-group">
      <div class="rentnow-first-calendar">
        <div class="rentnow-first-months">
          <label for="rentnow-first-month-dropdownmenu" class="rentnow-first-month-select" id="rentNowFirstMonthLabel"></label> 
          <select id="rentnow-first-month-dropdownmenu"> 
              <option value="January">January</option> 
              <option value="February">February</option> 
              <option value="March">March</option> 
              <option value="April">April</option>
              <option value="May">May</option> 
              <option value="June">June</option> 
              <option value="July">July</option> 
              <option value="August">August</option> 
              <option value="September">September</option> 
              <option value="October">October</option> 
              <option value="November">November</option>
              <option value="December">December</option> 
          </select>
          <label for="rentnow-first-year-dropdownmenu" class="rentnow-first-year-select" id="rentNowFirstYearLabel"></label> 
          <select id="rentnow-first-year-dropdownmenu"> 
              <option value="2023">2023</option> 
              <option value="2024">2024</option> 
              <option value="2025">2025</option> 
              <option value="2026">2026</option> 
              <option value="2027">2027</option>
              <option value="2028">2028</option> 
              <option value="2029">2030</option>
              <option value="2029">2031</option> 
              <option value="2029">2032</option> 
              <option value="2029">2033</option>  
          </select>
        </div>
        <div class="rentnow-first-weekdays">
          <p>Su</p>
          <p>Mo</p>
          <p>Tu</p>
          <p>We</p>
          <p>Th</p>
          <p>Fr</p>
          <p>Sa</p>          
        </div>
        <div class="rentnow-first-days"></div>
      </div>

      <div class="rentnow-second-calendar">
        <div class="rentnow-second-months">
          <p class="rentnow-second-month-select">October</p>
          <p class="rentnow-first-year-select">&nbsp;2023</p>
        </div>
        <div class="rentnow-second-weekdays">
          <p>Su</p>
          <p>Mo</p>
          <p>Tu</p>
          <p>We</p>
          <p>Th</p>
          <p>Fr</p>
          <p>Sa</p>
        </div>
        <div class="rentnow-second-days">
          <p class="rentnow-prevdays">27</p>
          <p class="rentnow-prevdays">28</p>
          <p class="rentnow-prevdays">29</p>
          <p class="rentnow-prevdays">30</p>
          <p class="rentnow-prevdays">31</p>

          <p>1</p>
          <p>2</p>
          <p>3</p>
          <p>4</p>
          <p>5</p>
          <p>6</p>
          <p>7</p>
          <p>8</p>
          <p>9</p>
          <p>10</p>
          <p>11</p>
          <p>12</p>
          <p>13</p>
          <p>14</p>
          <p>15</p>
          <p>16</p>
          <p>17</p>
          <p>18</p>
          <p>19</p>
          <p>20</p>
          <p>21</p>
          <p>22</p>
          <p>23</p>
          <p>24</p>
          <p>25</p>
          <p>26</p>
          <p>27</p>
          <p>28</p>
          <p>29</p>
          <p>30</p>

          <p class="rentnow-nextdays">1</p>
          <p class="rentnow-nextdays">2</p>
          <p class="rentnow-nextdays">3</p>
          <p class="rentnow-nextdays">4</p>
          <p class="rentnow-nextdays">5</p>
          <p class="rentnow-nextdays">6</p>
          <p class="rentnow-nextdays">7</p>
        </div>
      </div>
    </div>

    <div class="rentnow-calendar-legend">
      <div class="rentnow-subheader-container5">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none">
          <circle cx="12.375" cy="12.4671" r="11.5127" fill="#8A947F" fill-opacity="0.5"/>
        </svg>
        <h2>Collection/Return Dates Respectively (Free) </h2>
      </div>
      <div class="rentnow-subheader-container5">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none">
          <circle cx="12.375" cy="12.4671" r="11.5127" fill="#FFA665" fill-opacity="0.5"/>
        </svg>
        <h2>Selected Dates</h2>
      </div>
    </div>
  </div>

  <div class="rentnow-header2-container2">
    <p>Feel Free to move</p>        
    <img class= "rentnow-start-circle-image" src="{{ 'rentnow-start-circle.svg' | asset_url }}" />
    <img class= "rentnow-end-circle-image" src="{{ 'rentnow-end-circle.svg' | asset_url }}" />          
    <p>to select your travel dates.</p>
  </div>

</div>

{% schema %}
  {
    "name": "RentNow Second Section",
    "settings": [],
    "presets": [
        {
            "name": "RentNow Second Section"
        }
    ]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}

//Inserting Current Month/Year

const date = new Date();

const months = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December",
];

// DropDown Menu for First Month and Year
document.querySelector('.rentnow-first-month-select').innerHTML = months[date.getMonth()];

const rentNowFirstMonthLabel = document.getElementById('rentNowFirstMonthLabel');
const dropdownMonth = document.getElementById("rentnow-first-month-dropdownmenu");

const rentNowFirstYearLabel = document.getElementById('rentNowFirstYearLabel');
document.querySelector('.rentnow-first-year-select').innerHTML = "&nbsp;" + date.getFullYear();

const dropdownYear = document.getElementById('rentnow-first-year-dropdownmenu');

// Event listener for label click
rentNowFirstMonthLabel.addEventListener('click', function() {
  dropdownMonth.style.display = 'block'; 
  dropdownMonth.size= "7";
  dropdownMonth.click();
  event.stopPropagation();
});

// Event listener for dropdown change
dropdownMonth.addEventListener('change', function() {
  const selectedMonth = dropdownMonth.value;
  rentNowFirstMonthLabel.textContent = selectedMonth;
  dropdownMonth.style.display = 'none';

  const selectedMonthIndex = months.indexOf(selectedMonth);
  date.setMonth(selectedMonthIndex);

  updateCalendar();
});

// Function to update the calendar
function updateCalendar() {
  const firstMonthDays = document.querySelector(".rentnow-first-days");
  let days = "";

  // Dates before Month
  const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay();
  const lastDayPrevMonth = new Date(date.getFullYear(), date.getMonth(), 0).getDate();

  for (let x = firstDay - 1; x >= 0; x--) {
    days += `<p class="rentnow-prevdays">${lastDayPrevMonth - x}</p>`;
  }

  // Dates correspond to Month and Year
  const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();

  for (let i = 1; i <= lastDay; i++) {
    days += `<p>${i}</p>`;
  }

  // Dates after Month
  const lastDayIndex = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay();
  const nextDays = 6 - lastDayIndex;

  for (let j = 1; j <= nextDays; j++) {
    days += `<p class="rentnow-nextdays">${j}</p>`;
  }

  firstMonthDays.innerHTML = days;
}

updateCalendar();

// Dates before Month
const firstPrevLastDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate(); 
const firstFirstDayIndex = date.getDay();

let days = "";

for (let x = firstFirstDayIndex - 1; x > 0; x--) {
  days += `<p class="rentnow-prevdays">${firstPrevLastDay - x +  1}</p>`; 
}

// Dates correspond to Month and Year
const firstMonthDays = document.querySelector(".rentnow-first-days");

const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();

for (let i = 1; i <= lastDay; i++) {
  days += `<p id="firstMonthDays">${i}</p>`;
}

// Dates after Month
const firstLastDayIndex = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay();
const firstNextDays = 7 - firstLastDayIndex - 1;

for (let j = 1; j<= firstNextDays; j++) {
  days += `<p class="rentnow-nextdays">${j}</p>`;
  firstMonthDays.innerHTML = days;
}

// Event listener for label click
rentNowFirstYearLabel.addEventListener('click', function(event) {
  dropdownYear.style.display = 'block';
  dropdownYear.size = 7;
  dropdownYear.click();
  event.stopPropagation();
});

// Event listener for dropdown change
dropdownYear.addEventListener('change', function() {
  const selectedYear = dropdownYear.value;
  rentNowFirstYearLabel.textContent = "\u00A0" + selectedYear;
  dropdownYear.style.display = 'none';

  console.log(selectedYear);
  date.setFullYear(selectedYear);
  updateCalendar();
});

// Selection of Start and End Date
let startDate = null;
let endDate = null;

// Event listener for date click
document.querySelector(".rentnow-first-days").addEventListener("click", function (event) {
  const selectedDate = event.target.textContent;

  // Check if the clicked date is a valid number
  if (event.target.closest(".rentnow-first-days") && !isNaN(selectedDate) && !event.target.classList.contains("rentnow-prevdays") && !event.target.classList.contains("rentnow-nextdays")) {
    const currentDate = new Date(date.getFullYear(), date.getMonth(), selectedDate);

    if (startDate !== null && endDate !== null) {
      startDate = null;
      endDate = null;

      document.querySelectorAll(".rentnow-first-days p").forEach((day) => {
        day.classList.remove("rentnow-start-date", "rentnow-end-date", "rentnow-selected-date", 
        "rentnow-selected-first-date", "rentnow-selected-last-date");
      });
    }

    // If start date is not set, set it
    if (startDate === null) {
      startDate = currentDate;
      event.target.classList.add("rentnow-start-date");
    } else if (endDate === null && currentDate > startDate) {
      // If start date is set, and end date is not set, set end date only if it's after start date
      endDate = currentDate;
      event.target.classList.add("rentnow-end-date");

      // Selection of Dates
      const dateRange = getDatesBetween(startDate, endDate);
      console.log(dateRange);
      const allParagraphs = document.querySelectorAll('.rentnow-first-days p');

      dateRange.forEach((date, index, array) => {
        let dayElement;

        allParagraphs.forEach((paragraph) => {
          // Exclude dates with "rentnow-prevdays" and "rentnow-nextdays" classes
          if (!paragraph.classList.contains("rentnow-prevdays") && !paragraph.classList.contains("rentnow-nextdays")) {
            if (parseInt(paragraph.textContent.trim()) === date.getDate()) {
              dayElement = paragraph;
            }
          }
        });

        if (dayElement) {

          console.log ("im changing pls");

          if (index === 0) {
            dayElement.classList.add("rentnow-selected-first-date");
            dayElement.classList.add("rentnow-selected-date");
          }

          else if (index === dateRange.length - 1) {
            dayElement.classList.add("rentnow-selected-last-date");
            dayElement.classList.add("rentnow-selected-date");
          }

          else {
          dayElement.classList.add("rentnow-selected-date");
          }
        }
      });
    }
  }
});

// Function to get dates between start and end date
function getDatesBetween(startDate, endDate) {
  const dates = [];
  let afterDate = new Date(startDate);
  afterDate.setDate(afterDate.getDate() + 1);

  let beforeDate = new Date(endDate);
  beforeDate.setDate(beforeDate.getDate() - 1);

  while (afterDate <= beforeDate) {
    dates.push(new Date(afterDate));
    afterDate.setDate(afterDate.getDate() + 1);
  }
  return dates;
}


{% endjavascript %}